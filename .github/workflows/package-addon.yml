name: Package World of Warcraft addon

on:
  push:
    tags:
      - 'v*'

jobs:
  package:
    name: Create zips and tag
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set environment variables
      run: |
        echo "ADDON_VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        echo "ADDON_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

    - name: Make folder for zips
      run: |
        mkdir -p .releases/${{ env.ADDON_NAME }}
        rsync -r --exclude '.*' --exclude 'README.md' . .releases/${{ env.ADDON_NAME }}

    - name: Create retail zip
      run: |
        cd .releases
        zip -9 -r ${{ format('{0}-{1}.zip', env.ADDON_NAME, env.ADDON_VERSION) }} ${{ env.ADDON_NAME }}
        cd ..

    - name: Tag this version
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.ADDON_VERSION }}
        release_name: ${{ format('{0} {1}', env.ADDON_NAME, env.ADDON_VERSION) }}
        body: ${{ format('{0} {1}', env.ADDON_NAME, env.ADDON_VERSION) }}
        draft: false
        prerelease: false

    - name: Add retail zip to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .releases/${{ format('{0}-{1}.zip', env.ADDON_NAME, env.ADDON_VERSION) }}
        asset_name: ${{ format('{0}-{1}.zip', env.ADDON_NAME, env.ADDON_VERSION) }}
        asset_content_type: application/zip

    # needs to set CURSEFORGE_PROJECT_ID and CURSEFORGE_API_TOKEN secret variables
    - name: Upload to CurseForge
      uses: itsmeow/curseforge-upload@v3
      with:
        file_path: .releases/${{ format('{0}-{1}.zip', env.ADDON_NAME, env.ADDON_VERSION) }}
        game_endpoint: wow
        project_id: ${{ secrets.CURSEFORGE_PROJECT_ID }}
        token: ${{ secrets.CURSEFORGE_API_TOKEN }}
		